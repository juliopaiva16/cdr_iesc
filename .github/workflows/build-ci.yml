name: Flutter Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest  # A primeira execução será em um ambiente Linux

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            flutter_channel: stable
          - os: windows-latest
            flutter_channel: stable

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.2'  # Você pode mudar a versão do Flutter conforme necessário

      - name: Install dependencies
        run: flutter pub get

      - name: Build Flutter app for Linux/Windows
        run: |
          flutter build linux --release --no-pub
          flutter build windows --release --no-pub
        env:
          CI: true

      - name: Archive build outputs for release
        run: |
          mkdir build_output
          cp -r build/linux/x64/release/bundle build_output/linux
          cp -r build/windows/runner/Release/ build_output/windows

      - name: Upload artifacts to release
        uses: ncipollo/release-action@v1
        with:
          files: |
            build_output/linux/*
            build_output/windows/*
          tag: ${{ github.ref }}  # Usa a tag do commit, por exemplo, 'v1.0.0'
        
  create-release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Get version from pubspec.yaml
        id: get_version
        run: |
          VERSION=$(grep -oP 'version:\s*\K.+' pubspec.yaml)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          
      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build_output/linux/*
            build_output/windows/*
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
          
      - name: Clean up
        run: rm -rf build_output
